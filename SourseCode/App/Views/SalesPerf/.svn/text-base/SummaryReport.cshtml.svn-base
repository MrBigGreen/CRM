@using Common
@using Models
@{
    ViewBag.Title = "欧孚销售业绩汇总表";
    Layout = "~/Views/Shared/Index.cshtml";
}
<script src="~/Res/echarts-m-1.0.0/build/dist/echarts-all.js"></script> 
<div id="divQuery">
    <div class="easyui-panel" title="查询栏" iconcls="icon-search" collapsible="true" data-options="collapsed:false" style="height:auto;width:auto">
        <table id="ttSearch" class="record" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th style="width:120px; text-align:right; padding-right:10px;height:26px">
                    日期:
                </th>
                <td>
                    <input id="TheMonth" name="TheMonth" style="width:150px; " value="--请选择--" />

                </td>
            </tr>

            <tr>
                <th style="width:120px; text-align:right; padding-right:10px;height:26px">
                    客户归属人:
                </th>
                <td>
                    @if (ViewBag.PersonList != null)
                    {
                        <label>
                            @Html.CheckBoxList("SysPersonIdList", (IEnumerable<SelectListItem>)ViewBag.PersonList, false)

                        </label>
                    }
                    else
                    {
                        @Html.Action("Selected", "SysDepartmentTree")
                    }

                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align:center">
                    <a href="#" onclick="flexiQuery()" class="easyui-linkbutton" data-options="iconCls:'icon-search'">
                        查 询
                    </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                </td>
            </tr>
        </table>

    </div>
</div>
<br style="clear: both;" />
<table id="flexigridData"></table>
<div>


</div>
<!-- 为ECharts准备一个具备大小（宽高）的Dom -->
<div id="myChart1" style="width: 850px;height:400px;"></div>

<!-- 为ECharts准备一个具备大小（宽高）的Dom -->
<div id="myChart2" style="width: 850px; height: 400px; "></div>


<!-- 为ECharts准备一个具备大小（宽高）的Dom -->
<div id="myChart3" style="width: 850px; height: 400px; "></div>

<script type="text/javascript">

    $(function () {
        $('#TheMonth').combobox({
            valueField: 'Value', //值字段
            textField: 'Text', //显示的字段
            editable: false,
            url: '/SalesPerf/GetMonth',
        });


        $('#flexigridData').datagrid({
            //title: '客户汇总', //列表的标题
            iconCls: 'icon-site',
            width: '99%',
            height: 'auto',
            striped: true,
            collapsible: true,
            singleSelect: false,
            //url: '../Reports/GetCustomerSummaryData', //获取数据的url
            idField: 'PersonID',
            sortName: 'SortColumn',
            sortOrder: 'desc',
            //toolbar: [{
            //    text: '导出',
            //    iconCls: 'icon-excel',
            //    handler: function () {
            //        return flexiExport();
            //    }
            //}],
            pagination: false,
            rownumbers: true,
            columns: [[
            { field: 'ck', title: '全选', checkbox: true, width: 100 },
            {
                field: 'TheWeek', title: '客户拜访数', width: 110, formatter: function (value, rowData) {
                    if (value == 1 && rowData.Category == 1) {
                        return "第一周预计";
                    }
                    else if (value == 1 && rowData.Category == 2) {
                        return "第一周实际";
                    }
                    else if (value == 2 && rowData.Category == 1) {
                        return "第二周预计";
                    }
                    else if (value == 2 && rowData.Category == 2) {
                        return "第二周实际";
                    }
                    else if (value == 3 && rowData.Category == 1) {
                        return "第三周预计";
                    }
                    else if (value == 3 && rowData.Category == 2) {
                        return "第三周实际";
                    }
                    else if (value == 4 && rowData.Category == 1) {
                        return "第四周预计";
                    }
                    else if (value == 4 && rowData.Category == 2) {
                        return "第四周实际";
                    }
                    else if (value == 99 && rowData.Category == 3) {
                        return "本月合计";
                    }
                    else if (value == 100 && rowData.Category == 3) {
                        return "本年累计数";
                    }
                }
            },
            { field: 'FollowUpQty', title: '客户拜访数', width: 110 },
            { field: 'ContractQty', title: '合同数量', width: 110 },
            { field: 'KeyCustomerQty', title: '重点客户数', width: 110 },
            { field: 'BillingAmount', title: '开票金额(元)', width: 110 },
            { field: 'BudgetAmount', title: '预算金额(元)', width: 110 },
            {
                field: 'FollowUpAvg', title: '平均拜访数', width: 110, formatter: function (value, rowData) {
                    if (rowData.ContractQty == 0) {
                        return 0;
                    }
                    return (rowData.FollowUpQty / rowData.ContractQty).toFixed(2);

                }
            }

            ]],
            onLoadSuccess: function () {

                loadChart();

            },
        });
    });


    //将查询条件按照分隔符拼接成字符串
    var search = "";

    //“查询”按钮，弹出查询框
    function flexiQuery() {

        search = "";
        if ($("#TheMonth").val() != "") {

            search = search + 'TheMonth' + "&" + $('#TheMonth').combobox('getValue') + '^';
        }

        var SysPersonId = "";

        if ($("input[name='SysPersonIdList']").length > 0) {
            $("input[name='SysPersonIdList']:checked").each(function () {
                SysPersonId += $(this).val() + ',';
            });
        }
        else {

            //取得所有选中的节点，返回节点对象的集合
            var nodes = $("#myTree").tree("getChecked");
            if (nodes != null && nodes.length > 0) {
                for (var i = 0; i < nodes.length; i++) {
                    SysPersonId += nodes[i].id + ",";
                }
                if ($('input:radio[name="rdoSelect"]:checked').val() == "person") {
                    //人员选择
                    search = search + 'FindType&0^';
                }
                else {
                    //部门选择
                    search = search + 'FindType&1^';
                }
            }
        }

        if (SysPersonId.length > 0) {
            search = search + 'SysPersonID' + "&" + SysPersonId.substring(0, SysPersonId.length - 1) + '^';
        }
        else {
            search = search + 'SysPersonID' + "&" + $("#SysPersonID").val() + '^';
        }
        $('#flexigridData').datagrid('options').url = "../SalesPerf/GetSalesPerfReport";
        $("#flexigridData").datagrid("clearSelections");
        //执行查询
        $('#flexigridData').datagrid('load', { search: search });
    }


</script>


<script type="text/javascript">

    var loadChart = function () {
        var rows = $('#flexigridData').datagrid('getRows')//获取当前页的数据行
        var names = ["W1", "W2", "W3", "W4"];
        var FollowUpQtys = new Array();
        var ContractQtys = new Array();
        var BillingAmounts = new Array();


        var yjFollowUpQtys = new Array();
        var yjContractQtys = new Array();
        var yjBillingAmounts = new Array();
        var yjBudgetAmounts = new Array();

        var sjFollowUpQtys = new Array();
        var sjContractQtys = new Array();
        var sjBillingAmounts = new Array();
        var sjBudgetAmounts = new Array();


        
        for (var i = 0; i < rows.length - 2; i++) {

            if (i % 2 == 0) {
                yjFollowUpQtys.push(rows[i].FollowUpQty);
                yjContractQtys.push(rows[i].ContractQty);
                yjBillingAmounts.push(rows[i].BillingAmount);
                yjBudgetAmounts.push(rows[i].BudgetAmount);
            }
            else {
                sjFollowUpQtys.push(rows[i].FollowUpQty);
                sjContractQtys.push(rows[i].ContractQty);
                sjBillingAmounts.push(rows[i].BillingAmount);
                sjBudgetAmounts.push(rows[i].BudgetAmount);
            }
            
        }


        // 基于准备好的dom，初始化echarts实例
        var myChart1 = echarts.init(document.getElementById('myChart1'));
        //myChart1.setTheme(theme);
        // 指定图表的配置项和数据
        var option1 = {
            title: {
                text: '客户拜访数'
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                data: ['预计拜访数', '实际拜访数']
            },
            toolbox: {
                show: true,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: { show: true, type: ['line', 'bar'] },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            calculable: true,
            xAxis: {
                type: 'category',
                boundaryGap: false,
                data: names

            },

            yAxis: {},
            series: [{
                name: '预计拜访数',
                type: 'line',
                data: yjFollowUpQtys,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                markLine: {
                    data: [
                        { type: 'average', name: '平均值' }
                    ]
                }
            },
            {
                name: '实际拜访数',
                type: 'line',
                data: sjFollowUpQtys,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                markLine: {
                    data: [
                        { type: 'average', name: '平均值' }
                    ]
                }
            }


            ],
            
        };

        // 使用刚指定的配置项和数据显示图表。
        myChart1.setOption(option1);





        // 基于准备好的dom，初始化echarts实例
        var myChart2 = echarts.init(document.getElementById('myChart2'));
        //myChart2.setTheme(theme);
        // 指定图表的配置项和数据
        var option2 = {
            title: {
                text: '合同数量'
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                data: ['预计合同数', '实际合同数']
            },
            toolbox: {
                show: true,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: { show: true, type: ['line', 'bar'] },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            calculable: true,
            xAxis: {
                type: 'category',
                boundaryGap: false,
                data: names

            },

            yAxis: {},
            series: [{
                name: '预计合同数',
                type: 'line',
                data: yjContractQtys,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                markLine: {
                    data: [
                        { type: 'average', name: '平均值' }
                    ]
                }
            },
            {
                name: '实际合同数',
                type: 'line',
                data: sjContractQtys,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                markLine: {
                    data: [
                        { type: 'average', name: '平均值' }
                    ]
                }
            }


            ],

        };

        // 使用刚指定的配置项和数据显示图表。
        myChart2.setOption(option2);




        // 基于准备好的dom，初始化echarts实例
        var myChart3 = echarts.init(document.getElementById('myChart3'));
        //myChart3.setTheme(theme);
        // 指定图表的配置项和数据
        var option3 = {
            title: {
                text: '开票金额'
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                data: ['预计开票金额', '实际开票金额','预算金额']
            },
            toolbox: {
                show: true,
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: { show: true, type: ['line', 'bar'] },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            calculable: true,
            xAxis: {
                type: 'category',
                boundaryGap: false,
                data: names

            },

            yAxis: {},
            series: [{
                name: '预计开票金额',
                type: 'line',
                data: yjBillingAmounts,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                markLine: {
                    data: [
                        { type: 'average', name: '平均值' }
                    ]
                }
            },
            {
                name: '实际开票金额',
                type: 'line',
                data: sjBillingAmounts,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                markLine: {
                    data: [
                        { type: 'average', name: '平均值' }
                    ]
                }
            },
            {
                name: '预算金额',
                type: 'line',
                data: sjBudgetAmounts,
                markPoint: {
                    data: [
                        { type: 'max', name: '最大值' },
                        { type: 'min', name: '最小值' }
                    ]
                },
                //markLine: {
                //    data: [
                //        { type: 'average', name: '平均值' }
                //    ]
                //}
            }


            ],

        };

        // 使用刚指定的配置项和数据显示图表。
        myChart3.setOption(option3);



        /*

        // 基于准备好的dom，初始化echarts实例
        var myChart2 = echarts.init(document.getElementById('myChart2'));
        // 指定图表的配置项和数据
        var option2 = {
            title: {
                text: '合同数量'
            },
            tooltip: {},
            legend: {
                data: ['合同数量']
            },
            xAxis: {
                data: names
            },
            yAxis: {},
            series: [{
                name: '数量',
                type: 'bar',
                data: FollowUpQtys
            }],
            itemStyle: {
                normal: {
                    color: '#CD8162',
                    // 阴影的大小
                    shadowBlur: 200,
                    // 阴影水平方向上的偏移
                    shadowOffsetX: 0,
                    // 阴影垂直方向上的偏移
                    shadowOffsetY: 0,
                    // 阴影颜色
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        };

        // 使用刚指定的配置项和数据显示图表。
        myChart2.setOption(option2);

        // 基于准备好的dom，初始化echarts实例
        var myChart3 = echarts.init(document.getElementById('myChart3'));
        // 指定图表的配置项和数据
        var option3 = {
            title: {
                text: '开票金额'
            },
            tooltip: {},
            legend: {
                data: ['开票金额']
            },
            xAxis: {
                data: names
            },
            yAxis: {},
            series: [{
                name: '金额（万元）',
                type: 'bar',
                data: FollowUpQtys
            }],
            itemStyle: {
                normal: {
                    color: '#8B3A62',
                    // 阴影的大小
                    shadowBlur: 200,
                    // 阴影水平方向上的偏移
                    shadowOffsetX: 0,
                    // 阴影垂直方向上的偏移
                    shadowOffsetY: 0,
                    // 阴影颜色
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }

        };

        // 使用刚指定的配置项和数据显示图表。
        myChart3.setOption(option3);
        */
    }
</script>